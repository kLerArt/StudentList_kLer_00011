package programable.android.klerart.showuseronrecyclerview.Database;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.database.sqlite.SQLiteQueryBuilder;import android.database.sqlite.SQLiteStatement;import com.readystatesoftware.sqliteasset.SQLiteAssetHelper;import java.util.ArrayList;import java.util.List;import programable.android.klerart.showuseronrecyclerview.Modell.Student;public class Database extends SQLiteAssetHelper {    private static final String DB_NAME="Students.sqlite";    private static final int DB_Version=1;    private static final String StuId="ID";    private static final String OrginalId="OrginalId";    private static final String StuNAme="FullName";    private static final String StuIMG="IMGStudent";    private static final String StuSemester="Semester";    private static final String StuDepartment="Department";    private static final String StuGroup="StudentGroup";    private static final String StuCount="Count";    private static final String StuComment="Comment";    private static final String StuYearOfId="YearOfId";    private static final String StuSeason="Season";//    String[] SqlSelect={StuId,StuNAme,StuIMG,StuSemester,StuDepartment,StuGroup,StuCount,StuComment,StuYearOfId,StuSeason};    public void Database(){    }    public Database(Context context) {        super(context, DB_NAME, null, DB_Version);    }    public List<Student> getAllStudent(){        SQLiteDatabase db=getReadableDatabase();        SQLiteQueryBuilder qb=new SQLiteQueryBuilder();//        String[] SqlSelect={"ID","FullName","IMGStudent","Semester","Department","StudentGroup"};        String[] SqlSelect={StuId,StuNAme,OrginalId,StuIMG,StuSemester,StuDepartment,StuGroup,StuCount,StuComment,StuYearOfId,StuSeason};        String tableName="Student";        qb.setTables(tableName);        Cursor cursor=qb.query(db,SqlSelect,null,null,null,null,null);        System.out.println("count : " +cursor.getCount());        List<Student> result=new ArrayList<>();        if(cursor.moveToFirst()){            do {                Student student=new Student();                student.setStudentId(cursor.getInt(cursor.getColumnIndex("ID")));                student.setStuName(cursor.getString(cursor.getColumnIndex("FullName")));                student.setStuSemester(cursor.getInt(cursor.getColumnIndex("Semester")));                student.setStuGroup(cursor.getInt(cursor.getColumnIndex("StudentGroup")));                student.setStuDepartment(cursor.getInt(cursor.getColumnIndex("Department")));                student.setImga(cursor.getBlob(cursor.getColumnIndex("IMGStudent")));                result.add(student);            }while (cursor.moveToNext());        }        return result;    }    public List<Student> getAStudentBayg(){        SQLiteDatabase db=getReadableDatabase();        SQLiteQueryBuilder qb=new SQLiteQueryBuilder();        String[] SqlSelect={StuId,StuNAme,OrginalId,StuIMG,StuSemester,StuDepartment,StuGroup,StuCount,StuComment,StuYearOfId,StuSeason};        String tableName="Student";        qb.setTables(tableName);        Cursor cursor=qb.query(db,SqlSelect," Semester LIKE 4",null,null,null,null);        System.out.println("count : " +cursor.getCount());        List<Student> result=new ArrayList<>();        if(cursor.moveToFirst()){            do {                Student student=new Student();                student.setStudentId(cursor.getInt(cursor.getColumnIndex("ID")));                student.setStuName(cursor.getString(cursor.getColumnIndex("FullName")));                student.setStuSemester(cursor.getInt(cursor.getColumnIndex("Semester")));                student.setStuGroup(cursor.getInt(cursor.getColumnIndex("StudentGroup")));                student.setStuDepartment(cursor.getInt(cursor.getColumnIndex("Department")));                student.setImga(cursor.getBlob(cursor.getColumnIndex("IMGStudent")));                result.add(student);            }while (cursor.moveToNext());        }        return result;    }    public List<Student> getDependTo(String SpacifyName){        SQLiteDatabase db=getReadableDatabase();        SQLiteQueryBuilder qb=new SQLiteQueryBuilder();//        String[] SqlSelect={"ID","FullName","IMGStudent","Semester","Department","StudentGroup"};        String[] SqlSelect={StuId,StuNAme,OrginalId,StuIMG,StuSemester,StuDepartment,StuGroup,StuCount,StuComment,StuYearOfId,StuSeason};       // String[] SqlSelect={"ID","FullName","Semester","Group"};        String tableName="Student";        qb.setTables(tableName);        Cursor cursor=qb.query(db,SqlSelect," FullName LIKE ? or ID LIKE ?",new String[]{"%"+SpacifyName+"%"},null,null,null);        System.out.println("count : " +cursor.getCount());        List<Student> result=new ArrayList<>();        if(cursor.moveToFirst()){            do {                Student student=new Student();                student.setStudentId(cursor.getInt(cursor.getColumnIndex(StuId)));                student.setStuName(cursor.getString(cursor.getColumnIndex(StuNAme)));                student.setStuSemester(cursor.getInt(cursor.getColumnIndex(StuSemester)));                student.setStuGroup(cursor.getInt(cursor.getColumnIndex(StuGroup)));                student.setStuDepartment(cursor.getInt(cursor.getColumnIndex(StuDepartment)));                student.setImga(cursor.getBlob(cursor.getColumnIndex(StuIMG)));                result.add(student);            }while (cursor.moveToNext());        }        return result;    }    public List<Student> UpdatRow(String name){        SQLiteDatabase db=this.getWritableDatabase();        ContentValues contentValues=new ContentValues();        SQLiteQueryBuilder gb=new SQLiteQueryBuilder();        String[] SqlSelect={StuId,StuNAme,OrginalId,StuIMG,StuSemester,StuDepartment,StuGroup,StuCount,StuComment,StuYearOfId,StuSeason};        String tableName="Student";        gb.setTables(tableName);        List<Student> result=new ArrayList<>();        Cursor cursor=gb.query(db,SqlSelect,"set Semester=1 WHERE"+StuDepartment+"=1",null,null,null,null);        String sql="UPDATA "+tableName+" SET NAME = kLER  WHERE ID = ?";        SQLiteStatement sqLiteStatement=db.compileStatement(sql);        return result;    }    //============not use not Modifed}